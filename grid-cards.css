@media (min-width: 1460px) {
  .container-selected-grid {
    grid-template-columns: repeat(3, minmax(20vw, 1fr));
    grid-template-rows: repeat(1, minmax(22vw, 1fr));
    margin: 0 20px 0 !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (100vw / 1200px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      25vw * (100vw / 1200px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 1459px) and (min-width: 1200px) {
  .container-selected-grid {
    grid-template-columns: repeat(3, minmax(20vw, 1fr));
    grid-template-rows: repeat(1, minmax(20.5vw, 1fr));
    margin: 0 20px 0 !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (100vw / 1200px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 1200px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .container-selected-grid {
    grid-template-columns: repeat(3, minmax(20vw, 1fr));
    grid-template-rows: repeat(1, minmax(21vw, 1fr));
    margin: 0 20px 0 !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (200vw / 992px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 992px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 991px) and (min-width: 850px) {
  .container-selected-grid {
    grid-template-columns: repeat(1, minmax(50vw, 1fr));
    grid-template-rows: repeat(3, minmax(41vw, 1fr));
    margin: 0 auto !important;
    width: 60% !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (200vw / 500px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 500px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 849px) and (min-width: 750px) {
  .container-selected-grid {
    grid-template-columns: repeat(1, minmax(50vw, 1fr));
    grid-template-rows: repeat(3, minmax(41vw, 1fr));
    margin: 0 auto !important;
    width: 60% !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (200vw / 500px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 500px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 749px) and (min-width: 650px) {
  .container-selected-grid {
    grid-template-columns: repeat(1, minmax(50vw, 1fr));
    grid-template-rows: repeat(3, minmax(41vw, 1fr));
    margin: 0 auto !important;
    width: 60% !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (200vw / 500px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 500px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 649px) and (min-width: 500px) {
  .container-selected-grid {
    grid-template-columns: repeat(1, minmax(50vw, 1fr));
    grid-template-rows: repeat(3, minmax(41vw, 1fr));
    margin: 0 auto !important;
    width: 60% !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (200vw / 500px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 500px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 499px) {
  .container-selected-grid {
    grid-template-columns: repeat(1, minmax(50vw, 1fr));
    grid-template-rows: repeat(3, minmax(61vw, 1fr));
    margin: 0 auto !important;
    padding: 1em 1.2em 1.4em 1em !important;
    column-gap: 1.1em !important;
    row-gap: 1.5em !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (100vw / 499px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 499px)
    ); /* set height proportionally to the viewport width */
  }
}

/**/

@media (min-width: 1801px) {
  .grid-container {
    grid-template-columns: repeat(4, minmax(20.5vw, 1fr));
    grid-template-rows: repeat(3, minmax(16.5vw, 1fr));
    margin: 0 20px !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (100vw / 1401px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 1401px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 1800px) and (min-width: 1200px) {
  .grid-container {
    grid-template-columns: repeat(4, minmax(20vw, 1fr));
    grid-template-rows: repeat(3, minmax(16vw, 1fr));
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (100vw / 1200px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      15vw * (100vw / 1200px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .grid-container {
    grid-template-columns: repeat(4, minmax(16vw, 1fr));
    grid-template-rows: repeat(3, minmax(15.5vw, 1fr));
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (200vw / 992px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 992px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 991px) and (min-width: 500px) {
  .grid-container {
    grid-template-columns: repeat(2, minmax(20vw, 1fr));
    grid-template-rows: repeat(6, minmax(33vw, 1fr));
    padding: 1em 1.2em 1.4em 1em !important;
    margin: 0em !important;
    column-gap: 1.1em !important;
    row-gap: 1.5em !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (100vw / 500px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 500px)
    ); /* set height proportionally to the viewport width */
  }
}

@media (max-width: 499px) {
  .grid-container {
    grid-template-columns: repeat(1, minmax(20vw, 1fr));
    grid-template-rows: repeat(12, minmax(60vw, 1fr));
    padding: 1em 1.2em 1.4em 1em !important;
    margin: 0em !important;
    column-gap: 1.1em !important;
    row-gap: 1.5em !important;
  }
  .cards,
  .selected-card {
    width: calc(
      23vw * (100vw / 499px)
    ); /* set width proportionally to the viewport width */
    height: calc(
      33vw * (100vw / 499px)
    ); /* set height proportionally to the viewport width */
  }
}

.grid-container {
  display: grid;
  background-color: #60798e;
  padding: 1.5em 1.8em 1.5em 1.5em;
  row-gap: 2em;
  column-gap: 1.5em;
  margin: 0 10px 10px;
  padding-bottom: 25px;
  border-radius: 10px;
}

.container-selected-grid {
  display: none;
  background-color: #e6e6e6;
  padding: 1.5em 1.8em 1.5em 1.5em;
  row-gap: 2em;
  column-gap: 1.5em;
  margin: 0 10px 10px;
  padding-bottom: 25px;
  border-radius: 10px;
}

.cards,
.selected-card {
  border-radius: 15px;
  text-align: center;
  background-size: cover;
  object-fit: contain;
  box-shadow: 6px 5px 4px rgb(46, 46, 46);
}

.selected-card {
  border: 3px solid #dadada;
  border-radius: 15px;
  outline: none;
  border-color: #9ecaed;
  box-shadow: 0 0 10px #9ecaed, 9px 8px 5px rgb(46, 46, 46);
}
